/*
    This project is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Deviation is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Deviation.  If not, see <http://www.gnu.org/licenses/>.
*/

#include "common.h"

#define OFFSET 0x20 

/* map ascii character to IA9211 character ROM */
#define _100 0x1f //Filled char
#define _RHT 0x3b //right arrow
#define _LFT 0x3c //left arrow
#define _UP  0x3d //up arrow
#define _DWN 0x3e //down arrow
#define _PFI 0x3f//3f //partial fill
#define _DOT 0x6e//6e //centered dot
//6f //phone
//72 //sun
#define _CLO 0x73//73 //cloud
//74 //umbrella
#define _BAT 0x75//75 //hourglass
//76 //note
#define _RPT 0x7c //right triangle
#define _LPT 0x7d //left triangle
static const char map_rom[] = {
//            0x00  0x01  0x02  0x03  0x04  0x05  0x06  0x07  0x08  0x09  0x0a  0x0b  0x0c  0x0d  0x0e  0x0f
/* 0x20 */    0x10, 0x1f, 0x1f, 0x10, _PFI, _CLO, _BAT, 0x1f, _LFT, _RHT, 0x6c, 0x1f, 0x0f, 0x0d, 0x0e, 0x6d,
/* 0x30 */    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x6b, 0x0b, _DOT, 0x0c, 0x50,
/* 0x40 */    0x1f, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x00,
/* 0x50 */    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, _LPT, 0x1f, _RPT, _UP , 0x10,
/* 0x60 */    _DWN, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
/* 0x70 */    0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a,
};

u32 IA9211_map_char(u32 c)
{
    if (c >= OFFSET && c < OFFSET + sizeof(map_rom) && map_rom[c-OFFSET] != 0x1f)
        return map_rom[c-OFFSET];
    printf("Illegal character: (%d)\n",c);
    //exti2_isr();
    return _100;
}
