# boards are ordered by priority so that when monitoring a build developers get feedback on the important ones first.
env:
#Do not define 'global' env vars here.  They cannot be used with API builds
    matrix:
      - MAKETARGET=zip_devo8
      - MAKETARGET=zip_devo10
      - MAKETARGET=zip_devo12
      - MAKETARGET=zip_devo7e
      - MAKETARGET=zip_devof12e
      - MAKETARGET=zip_t8sg
      - MAKETARGET=zip_at9
      - MAKETARGET=zip_devof7
      - MAKETARGET=zip_win_emu_devo8
      - MAKETARGET=zip_emu_devo8
      - MAKETARGET=test
#      - COMPILER=latest TARGET=devo8

matrix:
  fast_finish: true
  
dist: trusty

addons:
  apt:
    update: false
    packages:
      - build-essential
      - libc6-i386
      - mingw32
      - mingw32-binutils
      - mingw32-runtime
      - libfltk1.3-dev
      - gcovr
#      - gcc-arm-none-eabi

#Do NOT set these.  They set 'CC' which breaks the build
language: minimal
#compiler: gcc

git:
  depth: 5

before_install:
   - pip install --user cpp-coveralls
   - if [ ! -d "$HOME/gcc-arm-none-eabi-4_8-2013q4/bin" ]; then
       pushd $HOME;
       curl --retry 10 --retry-max-time 120 -L "https://launchpad.net/gcc-arm-embedded/4.8/4.8-2013-q4-major/+download/gcc-arm-none-eabi-4_8-2013q4-20131204-linux.tar.bz2" | tar xfj -;
       popd;
     fi;
   # don't build 'tests' because they don't work on a cross-compile, so we need to specify 'DIRS' explicitly
   - if [ ! -d "$HOME/fltk-1.3.0-w32/bin" ]; then
         mkdir $HOME/src;
         mkdir $HOME/fltk-1.3.0-w32;
         pushd $HOME/src;
         curl --retry 10 --retry-max-time 120 -L "http://fltk.org/pub/fltk/1.3.0/fltk-1.3.0-source.tar.gz" | tar xzf -;
         cd fltk-1.3.0;
         ./configure --prefix=$HOME/fltk-1.3.0-w32 --enable-localzlib --enable-localpng --disable-gl --host=i586-mingw32msvc &&
         make -j2 DIRS="jpeg zlib png src fluid" &&
         make install DIRS="jpeg zlib png src fluid";
         popd;
      fi;
   - if [ ! -d "$HOME/portaudio-w32/bin" ]; then
         mkdir $HOME/src;
         mkdir $HOME/portaudio-w32;
         pushd $HOME/src;
         curl --retry 10 --retry-max-time 120 -L "http://www.portaudio.com/archives/pa_stable_v19_20140130.tgz" | tar xzf -;
         cd portaudio;
         ./configure --prefix=$HOME/portaudio-w32 --host=i586-mingw32msvc &&
         make -j2 install;
         popd;
      fi;
   - if [ ! -d "$HOME/mpg123-w32/bin" ]; then
         mkdir $HOME/src;
         mkdir $HOME/mpg123-w32;
         pushd $HOME/src;
         curl --retry 10 --retry-max-time 120 -L "http://www.mpg123.de/download/mpg123-1.23.8.tar.bz2" | tar xjf -;
         cd mpg123-1.23.8;
         ./configure --prefix=$HOME/mpg123-w32 --host=i586-mingw32msvc --disable-shared && make;
         make -j2 install;
         strip --strip-unneeded $HOME/mpg123-w32/bin/mpg123.exe;
         popd;
      fi;
   - openssl aes-256-cbc -K $encrypted_54cd4d6ff016_key -iv $encrypted_54cd4d6ff016_iv -in install_nightlies.tar.enc -out install_nightlies.tar -d;
         tar -xf install_nightlies.tar;
         rm -f install_nightlies.tar

install:
  - export GITHUB_TOKEN='789c538d758e0a718c8ae537b7f6656776e20d768de18d546014e20876e1898933cd94648f75e06117e20000b71f080d'
  - export PATH=$PATH:$HOME/gcc-arm-none-eabi-4_8-2013q4/bin
#  - "export TRAVIS_COMMIT_MSG=\"$(git log --format=%B --no-merges -n 1)\""a
  - curl -s -L "https://api.travis-ci.org/repos/$TRAVIS_REPO_SLUG/builds/$TRAVIS_BUILD_ID" | python -c 'import sys, json; a = json.load(sys.stdin); print "export TRAVIS_EVENT_TYPE=" + a.get("event_type",""); print "export TRAVIS_COMMIT_MSG=\"" + a.get("message","").replace("\"", "\\\"") + "\""'
  - source <(curl -s -L "https://api.travis-ci.org/repos/$TRAVIS_REPO_SLUG/builds/$TRAVIS_BUILD_ID" | python -c 'import sys, json; a = json.load(sys.stdin); print "export TRAVIS_EVENT_TYPE=" + a.get("event_type",""); print "export TRAVIS_COMMIT_MSG=\"" + a.get("message","").replace("\"", "\\\"") + "\""')
  - if [[ "$MAKETARGET" == *"win"* ]]; then
       export FLTK_DIR=$HOME/fltk-1.3.0-w32;
       export PORTAUDIO_DIR=$HOME/portaudio-w32;
       export MPG123_DIR=$HOME/mpg123-w32;
    fi;

before_script:
  - echo $PATH
  - echo $HOME
  - arm-none-eabi-gcc --version

script: 
  - cd src;
  - if [[ "$TRAVIS_EVENT_TYPE" == "cron" && "$MAKETARGET" == "zip_devo8" ]]; then
        export MAKETARGET="zips winzips";
        export FLTK_DIR=$HOME/fltk-1.3.0-w32;
        export PORTAUDIO_DIR=$HOME/portaudio-w32;
        export MPG123_DIR=$HOME/mpg123-w32;
    fi;
  - make -j2 $MAKETARGET;
  - if [ "$MAKETARGET" == "test" ]; then
        ./test.elf;
    fi;
  - ../utils/archive_build_size.py "$MAKETARGET" || /bin/true;

after_success:
  - if [ "$TRAVIS_EVENT_TYPE" == "api" ]; then
        export NIGHTLY_DATE=$(echo $TRAVIS_COMMIT_MSG | egrep -o '[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}');
        if [[ "$TRAVIS_COMMIT_MSG" == "Nightly Build "* ]] && [ "$NIGHTLY_DATE" != "" ]; then
            echo "Uploading Nightly - $NIGHTLY_DATE";
            ../utils/upload_test_build.pl -skip -nightly "$NIGHTLY_DATE" -delete;
            ../utils/upload_test_build.pl -skip -nightly "$NIGHTLY_DATE" *.zip;
        else
            export RELEASE_VERSION=$(echo $TRAVIS_BRANCH | egrep -o '[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+');
            if [ "$RELEASE_VERSION" != "" ] && [ "$TRAVIS_BRANCH" == "v$RELEASE_VERSION" ]; then
                echo "Releasing $RELEASE_VERSION";
                ../utils/upload_test_build.pl -skip -release "$RELEASE_VERSION" -delete;
                ../utils/upload_test_build.pl -skip -release "$RELEASE_VERSION" *.zip;
            fi;
        fi;
    fi;
  - if [[ "$TRAVIS_EVENT_TYPE" == "cron" && "$MAKETARGET" == "zips winzips" ]]; then
          export NIGHTLY_DATE=$(date "+%Y-%m-%d");
        if [ "$NIGHTLY_DATE" != "" ]; then
            echo "Uploading Nightly - $NIGHTLY_DATE";
            ../utils/upload_test_build.pl -skip -nightly "$NIGHTLY_DATE" -delete;
            ../utils/upload_test_build.pl -skip -nightly "$NIGHTLY_DATE" *.zip;
        fi;
    fi;
  - if [ "$MAKETARGET" == "test" ]; then
      ../utils/coverage-summary.sh;
      coveralls -r . -b . --gcov-options '\-lp' -E '.*/tests/test_.*' -E '.*/objs/';
    fi;
       
cache:
  apt: true
  directories:
  - $HOME/gcc-arm-none-eabi-4_8-2013q4
  - $HOME/fltk-1.3.0-w32
  - $HOME/portaudio-w32
  - $HOME/mpg123-w32
